// Generated by view binder compiler. Do not edit!
package com.example.travelsagency.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.Spinner;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.travelsagency.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityCreateTravelBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button btnBackCreateTravel;

  @NonNull
  public final Button btnCreateTravel;

  @NonNull
  public final EditText edtxtDescriptionTravel;

  @NonNull
  public final Spinner edtxtDestinationTravel;

  @NonNull
  public final EditText edtxtEndTravel;

  @NonNull
  public final EditText edtxtHourExitTravel;

  @NonNull
  public final EditText edtxtLocationArriveTravel;

  @NonNull
  public final EditText edtxtLocationExitTravel;

  @NonNull
  public final EditText edtxtNameTravel;

  @NonNull
  public final EditText edtxtPriceTravel;

  @NonNull
  public final EditText edtxtQuantityTravel;

  @NonNull
  public final EditText edtxtStartTravel;

  private ActivityCreateTravelBinding(@NonNull LinearLayout rootView,
      @NonNull Button btnBackCreateTravel, @NonNull Button btnCreateTravel,
      @NonNull EditText edtxtDescriptionTravel, @NonNull Spinner edtxtDestinationTravel,
      @NonNull EditText edtxtEndTravel, @NonNull EditText edtxtHourExitTravel,
      @NonNull EditText edtxtLocationArriveTravel, @NonNull EditText edtxtLocationExitTravel,
      @NonNull EditText edtxtNameTravel, @NonNull EditText edtxtPriceTravel,
      @NonNull EditText edtxtQuantityTravel, @NonNull EditText edtxtStartTravel) {
    this.rootView = rootView;
    this.btnBackCreateTravel = btnBackCreateTravel;
    this.btnCreateTravel = btnCreateTravel;
    this.edtxtDescriptionTravel = edtxtDescriptionTravel;
    this.edtxtDestinationTravel = edtxtDestinationTravel;
    this.edtxtEndTravel = edtxtEndTravel;
    this.edtxtHourExitTravel = edtxtHourExitTravel;
    this.edtxtLocationArriveTravel = edtxtLocationArriveTravel;
    this.edtxtLocationExitTravel = edtxtLocationExitTravel;
    this.edtxtNameTravel = edtxtNameTravel;
    this.edtxtPriceTravel = edtxtPriceTravel;
    this.edtxtQuantityTravel = edtxtQuantityTravel;
    this.edtxtStartTravel = edtxtStartTravel;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityCreateTravelBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityCreateTravelBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_create_travel, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityCreateTravelBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnBackCreateTravel;
      Button btnBackCreateTravel = ViewBindings.findChildViewById(rootView, id);
      if (btnBackCreateTravel == null) {
        break missingId;
      }

      id = R.id.btnCreateTravel;
      Button btnCreateTravel = ViewBindings.findChildViewById(rootView, id);
      if (btnCreateTravel == null) {
        break missingId;
      }

      id = R.id.edtxt_description_travel;
      EditText edtxtDescriptionTravel = ViewBindings.findChildViewById(rootView, id);
      if (edtxtDescriptionTravel == null) {
        break missingId;
      }

      id = R.id.edtxt_destination_travel;
      Spinner edtxtDestinationTravel = ViewBindings.findChildViewById(rootView, id);
      if (edtxtDestinationTravel == null) {
        break missingId;
      }

      id = R.id.edtxt_end_travel;
      EditText edtxtEndTravel = ViewBindings.findChildViewById(rootView, id);
      if (edtxtEndTravel == null) {
        break missingId;
      }

      id = R.id.edtxt_hour_exit_travel;
      EditText edtxtHourExitTravel = ViewBindings.findChildViewById(rootView, id);
      if (edtxtHourExitTravel == null) {
        break missingId;
      }

      id = R.id.edtxt_location_arrive_travel;
      EditText edtxtLocationArriveTravel = ViewBindings.findChildViewById(rootView, id);
      if (edtxtLocationArriveTravel == null) {
        break missingId;
      }

      id = R.id.edtxt_location_exit_travel;
      EditText edtxtLocationExitTravel = ViewBindings.findChildViewById(rootView, id);
      if (edtxtLocationExitTravel == null) {
        break missingId;
      }

      id = R.id.edtxt_name_travel;
      EditText edtxtNameTravel = ViewBindings.findChildViewById(rootView, id);
      if (edtxtNameTravel == null) {
        break missingId;
      }

      id = R.id.edtxt_price_travel;
      EditText edtxtPriceTravel = ViewBindings.findChildViewById(rootView, id);
      if (edtxtPriceTravel == null) {
        break missingId;
      }

      id = R.id.edtxt_quantity_travel;
      EditText edtxtQuantityTravel = ViewBindings.findChildViewById(rootView, id);
      if (edtxtQuantityTravel == null) {
        break missingId;
      }

      id = R.id.edtxt_start_travel;
      EditText edtxtStartTravel = ViewBindings.findChildViewById(rootView, id);
      if (edtxtStartTravel == null) {
        break missingId;
      }

      return new ActivityCreateTravelBinding((LinearLayout) rootView, btnBackCreateTravel,
          btnCreateTravel, edtxtDescriptionTravel, edtxtDestinationTravel, edtxtEndTravel,
          edtxtHourExitTravel, edtxtLocationArriveTravel, edtxtLocationExitTravel, edtxtNameTravel,
          edtxtPriceTravel, edtxtQuantityTravel, edtxtStartTravel);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
