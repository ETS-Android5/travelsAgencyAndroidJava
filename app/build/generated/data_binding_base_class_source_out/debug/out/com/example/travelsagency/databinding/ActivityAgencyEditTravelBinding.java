// Generated by view binder compiler. Do not edit!
package com.example.travelsagency.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.Spinner;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.travelsagency.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityAgencyEditTravelBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button btnUpdateTravel;

  @NonNull
  public final EditText edtxtUpdateDescriptionTravel;

  @NonNull
  public final Spinner edtxtUpdateDestinationTravel;

  @NonNull
  public final EditText edtxtUpdateEndTravel;

  @NonNull
  public final EditText edtxtUpdateHourExitTravel;

  @NonNull
  public final EditText edtxtUpdateLocationArriveTravel;

  @NonNull
  public final EditText edtxtUpdateLocationExitTravel;

  @NonNull
  public final EditText edtxtUpdateNameTravel;

  @NonNull
  public final EditText edtxtUpdatePriceTravel;

  @NonNull
  public final EditText edtxtUpdateQuantityTravel;

  @NonNull
  public final EditText edtxtUpdateStartTravel;

  private ActivityAgencyEditTravelBinding(@NonNull LinearLayout rootView,
      @NonNull Button btnUpdateTravel, @NonNull EditText edtxtUpdateDescriptionTravel,
      @NonNull Spinner edtxtUpdateDestinationTravel, @NonNull EditText edtxtUpdateEndTravel,
      @NonNull EditText edtxtUpdateHourExitTravel,
      @NonNull EditText edtxtUpdateLocationArriveTravel,
      @NonNull EditText edtxtUpdateLocationExitTravel, @NonNull EditText edtxtUpdateNameTravel,
      @NonNull EditText edtxtUpdatePriceTravel, @NonNull EditText edtxtUpdateQuantityTravel,
      @NonNull EditText edtxtUpdateStartTravel) {
    this.rootView = rootView;
    this.btnUpdateTravel = btnUpdateTravel;
    this.edtxtUpdateDescriptionTravel = edtxtUpdateDescriptionTravel;
    this.edtxtUpdateDestinationTravel = edtxtUpdateDestinationTravel;
    this.edtxtUpdateEndTravel = edtxtUpdateEndTravel;
    this.edtxtUpdateHourExitTravel = edtxtUpdateHourExitTravel;
    this.edtxtUpdateLocationArriveTravel = edtxtUpdateLocationArriveTravel;
    this.edtxtUpdateLocationExitTravel = edtxtUpdateLocationExitTravel;
    this.edtxtUpdateNameTravel = edtxtUpdateNameTravel;
    this.edtxtUpdatePriceTravel = edtxtUpdatePriceTravel;
    this.edtxtUpdateQuantityTravel = edtxtUpdateQuantityTravel;
    this.edtxtUpdateStartTravel = edtxtUpdateStartTravel;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityAgencyEditTravelBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityAgencyEditTravelBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_agency_edit_travel, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityAgencyEditTravelBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnUpdateTravel;
      Button btnUpdateTravel = ViewBindings.findChildViewById(rootView, id);
      if (btnUpdateTravel == null) {
        break missingId;
      }

      id = R.id.edtxt_update_description_travel;
      EditText edtxtUpdateDescriptionTravel = ViewBindings.findChildViewById(rootView, id);
      if (edtxtUpdateDescriptionTravel == null) {
        break missingId;
      }

      id = R.id.edtxt_update_destination_travel;
      Spinner edtxtUpdateDestinationTravel = ViewBindings.findChildViewById(rootView, id);
      if (edtxtUpdateDestinationTravel == null) {
        break missingId;
      }

      id = R.id.edtxt_update_end_travel;
      EditText edtxtUpdateEndTravel = ViewBindings.findChildViewById(rootView, id);
      if (edtxtUpdateEndTravel == null) {
        break missingId;
      }

      id = R.id.edtxt_update_hour_exit_travel;
      EditText edtxtUpdateHourExitTravel = ViewBindings.findChildViewById(rootView, id);
      if (edtxtUpdateHourExitTravel == null) {
        break missingId;
      }

      id = R.id.edtxt_update_location_arrive_travel;
      EditText edtxtUpdateLocationArriveTravel = ViewBindings.findChildViewById(rootView, id);
      if (edtxtUpdateLocationArriveTravel == null) {
        break missingId;
      }

      id = R.id.edtxt_update_location_exit_travel;
      EditText edtxtUpdateLocationExitTravel = ViewBindings.findChildViewById(rootView, id);
      if (edtxtUpdateLocationExitTravel == null) {
        break missingId;
      }

      id = R.id.edtxt_update_name_travel;
      EditText edtxtUpdateNameTravel = ViewBindings.findChildViewById(rootView, id);
      if (edtxtUpdateNameTravel == null) {
        break missingId;
      }

      id = R.id.edtxt_update_price_travel;
      EditText edtxtUpdatePriceTravel = ViewBindings.findChildViewById(rootView, id);
      if (edtxtUpdatePriceTravel == null) {
        break missingId;
      }

      id = R.id.edtxt_update_quantity_travel;
      EditText edtxtUpdateQuantityTravel = ViewBindings.findChildViewById(rootView, id);
      if (edtxtUpdateQuantityTravel == null) {
        break missingId;
      }

      id = R.id.edtxt_update_start_travel;
      EditText edtxtUpdateStartTravel = ViewBindings.findChildViewById(rootView, id);
      if (edtxtUpdateStartTravel == null) {
        break missingId;
      }

      return new ActivityAgencyEditTravelBinding((LinearLayout) rootView, btnUpdateTravel,
          edtxtUpdateDescriptionTravel, edtxtUpdateDestinationTravel, edtxtUpdateEndTravel,
          edtxtUpdateHourExitTravel, edtxtUpdateLocationArriveTravel, edtxtUpdateLocationExitTravel,
          edtxtUpdateNameTravel, edtxtUpdatePriceTravel, edtxtUpdateQuantityTravel,
          edtxtUpdateStartTravel);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
