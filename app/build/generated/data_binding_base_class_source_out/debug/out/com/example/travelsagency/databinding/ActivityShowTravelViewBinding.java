// Generated by view binder compiler. Do not edit!
package com.example.travelsagency.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.travelsagency.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityShowTravelViewBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView endTravel;

  @NonNull
  public final TextView hourExit;

  @NonNull
  public final LinearLayout layout;

  @NonNull
  public final TextView locationArrive;

  @NonNull
  public final TextView locationExit;

  @NonNull
  public final TextView startTravel;

  @NonNull
  public final TextView titleTravel;

  @NonNull
  public final TextView travelDescription;

  @NonNull
  public final TextView travelDestionation;

  private ActivityShowTravelViewBinding(@NonNull LinearLayout rootView, @NonNull TextView endTravel,
      @NonNull TextView hourExit, @NonNull LinearLayout layout, @NonNull TextView locationArrive,
      @NonNull TextView locationExit, @NonNull TextView startTravel, @NonNull TextView titleTravel,
      @NonNull TextView travelDescription, @NonNull TextView travelDestionation) {
    this.rootView = rootView;
    this.endTravel = endTravel;
    this.hourExit = hourExit;
    this.layout = layout;
    this.locationArrive = locationArrive;
    this.locationExit = locationExit;
    this.startTravel = startTravel;
    this.titleTravel = titleTravel;
    this.travelDescription = travelDescription;
    this.travelDestionation = travelDestionation;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityShowTravelViewBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityShowTravelViewBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_show_travel_view, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityShowTravelViewBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.end_travel;
      TextView endTravel = ViewBindings.findChildViewById(rootView, id);
      if (endTravel == null) {
        break missingId;
      }

      id = R.id.hour_exit;
      TextView hourExit = ViewBindings.findChildViewById(rootView, id);
      if (hourExit == null) {
        break missingId;
      }

      LinearLayout layout = (LinearLayout) rootView;

      id = R.id.location_arrive;
      TextView locationArrive = ViewBindings.findChildViewById(rootView, id);
      if (locationArrive == null) {
        break missingId;
      }

      id = R.id.location_exit;
      TextView locationExit = ViewBindings.findChildViewById(rootView, id);
      if (locationExit == null) {
        break missingId;
      }

      id = R.id.start_travel;
      TextView startTravel = ViewBindings.findChildViewById(rootView, id);
      if (startTravel == null) {
        break missingId;
      }

      id = R.id.titleTravel;
      TextView titleTravel = ViewBindings.findChildViewById(rootView, id);
      if (titleTravel == null) {
        break missingId;
      }

      id = R.id.travelDescription;
      TextView travelDescription = ViewBindings.findChildViewById(rootView, id);
      if (travelDescription == null) {
        break missingId;
      }

      id = R.id.travelDestionation;
      TextView travelDestionation = ViewBindings.findChildViewById(rootView, id);
      if (travelDestionation == null) {
        break missingId;
      }

      return new ActivityShowTravelViewBinding((LinearLayout) rootView, endTravel, hourExit, layout,
          locationArrive, locationExit, startTravel, titleTravel, travelDescription,
          travelDestionation);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
